(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{"./src/docs/documentation/references/migration-guide.mdx":function(e,n,o){"use strict";o.r(n),o.d(n,"default",function(){return d});var a=o("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),t=o("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js"),r=o("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js"),m=o("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js"),s=o("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js"),p=o("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js"),c=o("./node_modules/react/index.js"),i=o.n(c),l=o("./node_modules/@mdx-js/tag/dist/index.js"),d=function(e){function n(e){var o;return Object(t.a)(this,n),(o=Object(m.a)(this,Object(s.a)(n).call(this,e))).layout=null,o}return Object(p.a)(n,e),Object(r.a)(n,[{key:"render",value:function(){var e=this.props,n=e.components;Object(a.a)(e,["components"]);return i.a.createElement(l.MDXTag,{name:"wrapper",components:n},i.a.createElement(l.MDXTag,{name:"h1",components:n,props:{id:"migration-guide"}},"Migration Guide"),i.a.createElement(l.MDXTag,{name:"p",components:n},"The ",i.a.createElement(l.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://github.com/pedronauck/docz/pull/656",target:"_blank",rel:["nofollow","noopener","noreferrer"]}},"v1 release")," was one of our big releases and a lot of breaking changes was introduced. So, there's few apis that changed and you need to update your code if you're coming from previous versions. It's not a big deal, but you need to follow this guide in order to get Docz running properly on your project."),i.a.createElement(l.MDXTag,{name:"h2",components:n,props:{id:"update-react-to-use-hooks"}},"Update React to use Hooks"),i.a.createElement(l.MDXTag,{name:"p",components:n},"We made a ",i.a.createElement(l.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://github.com/pedronauck/docz/commit/f57f987df0536b3b65a26f1b0e8a8f8f00d63800",target:"_blank",rel:["nofollow","noopener","noreferrer"]}},"huge improvement")," on Docz using the new react hooks. So, the biggest requirement is that you need ",i.a.createElement(l.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"react")," and ",i.a.createElement(l.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"react-dom")," with the version ",i.a.createElement(l.MDXTag,{name:"inlineCode",components:n,parentName:"p"},">= 16.8.0"),", because that's the version that has hooks released and stable. So, just update your React version, it's fully retro compatible."),i.a.createElement(l.MDXTag,{name:"h2",components:n,props:{id:"spectrum-instead-of-discord"}},"Spectrum instead of Discord"),i.a.createElement(l.MDXTag,{name:"p",components:n},"Another thing that we changed, it's now we're attending on Spectrum instead of Discord. You can check the ",i.a.createElement(l.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://spectrum.chat/docz",target:"_blank",rel:["nofollow","noopener","noreferrer"]}},"Docz community")," and ask we whatever you want!"),i.a.createElement(l.MDXTag,{name:"h2",components:n,props:{id:"no-more-render-props"}},"No more render props"),i.a.createElement(l.MDXTag,{name:"p",components:n},"In the oldest version of Docz, we're using render props as data components in order to get data from the Docz database and use it on themes. Now, all this render props became a hook. This is a huge improvement, since it's so easier to use them."),i.a.createElement(l.MDXTag,{name:"h4",components:n,props:{id:"docs-now-is-usedocs"}},i.a.createElement(l.MDXTag,{name:"inlineCode",components:n,parentName:"h4"},"<Docs>")," now is ",i.a.createElement(l.MDXTag,{name:"inlineCode",components:n,parentName:"h4"},"useDocs()")),i.a.createElement(l.MDXTag,{name:"p",components:n},"With this hook you can get all mdx entries used on Docz."),i.a.createElement(l.MDXTag,{name:"pre",components:n},i.a.createElement(l.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-jsx"}},"// old\n<Docs>\n  {({ docs, menus }) => /* do something */}\n</Docs>\n\n// new\nconst docs = useDocs()\n")),i.a.createElement(l.MDXTag,{name:"h4",components:n,props:{id:"themeconfig-now-is-useconfig"}},i.a.createElement(l.MDXTag,{name:"inlineCode",components:n,parentName:"h4"},"<ThemeConfig>")," now is ",i.a.createElement(l.MDXTag,{name:"inlineCode",components:n,parentName:"h4"},"useConfig()")),i.a.createElement(l.MDXTag,{name:"p",components:n},"Get information about the configuration of your project."),i.a.createElement(l.MDXTag,{name:"pre",components:n},i.a.createElement(l.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-jsx"}},"// old\n<ThemeConfig>\n  {(config) => /* do something */}\n</ThemeConfig>\n\n// new\nconst config = useConfig()\n")),i.a.createElement(l.MDXTag,{name:"h4",components:n,props:{id:"new-usemenus"}},"New ",i.a.createElement(l.MDXTag,{name:"inlineCode",components:n,parentName:"h4"},"useMenus()")),i.a.createElement(l.MDXTag,{name:"p",components:n},"If you want just the menu information you can use this hook."),i.a.createElement(l.MDXTag,{name:"pre",components:n},i.a.createElement(l.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-js"}},"const menus = useMenus({ query: 'some search' })\n")),i.a.createElement(l.MDXTag,{name:"h4",components:n,props:{id:"new-usecomponents"}},"New ",i.a.createElement(l.MDXTag,{name:"inlineCode",components:n,parentName:"h4"},"useComponents()")),i.a.createElement(l.MDXTag,{name:"p",components:n},"Get all components passed to ",i.a.createElement(l.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"<ComponentsProvider>")),i.a.createElement(l.MDXTag,{name:"pre",components:n},i.a.createElement(l.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-jsx"}},"const components = useComponents()\n")),i.a.createElement(l.MDXTag,{name:"h2",components:n,props:{id:"order-deprecated-removed"}},"Order deprecated removed"),i.a.createElement(l.MDXTag,{name:"p",components:n},"Since ",i.a.createElement(l.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://github.com/pedronauck/docz/releases/tag/v0.12.4",target:"_blank",rel:["nofollow","noopener","noreferrer"]}},"v0.12.4")," we launched ",i.a.createElement(l.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"menu")," property to create and sort your menu, and the ",i.a.createElement(l.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"ordering")," frontmatter field was deprecated. So, now we're removing this property. If you wanna see more information about the ",i.a.createElement(l.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"menu")," order property, you can take a look at the ",i.a.createElement(l.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"Ordering")," session on our website."),i.a.createElement(l.MDXTag,{name:"h2",components:n,props:{id:"use-props-instead-of-propstable"}},"Use Props instead of PropsTable"),i.a.createElement(l.MDXTag,{name:"p",components:n},"Another change that we've made in this version is that now we have a ",i.a.createElement(l.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"<Props>")," component instead of ",i.a.createElement(l.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"<PropsTable>"),". So, the ",i.a.createElement(l.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"<PropsTable>")," component doesn't exist anymore and the new one don't have more a table format, instead of that, it's just a list with the props and their values. So, it became more simple and flexible to be stylized."),i.a.createElement(l.MDXTag,{name:"h4",components:n,props:{id:"the-old-way"}},"The old way"),i.a.createElement(l.MDXTag,{name:"pre",components:n},i.a.createElement(l.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-jsx"}},"import { PropsTable } from 'docz'\nimport MyComponent from './my-components'\n\n<PropsTable of={MyComponent} />\n")),i.a.createElement(l.MDXTag,{name:"h3",components:n,props:{id:"the-new-way"}},"The new way"),i.a.createElement(l.MDXTag,{name:"pre",components:n},i.a.createElement(l.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-jsx"}},"import { Props } from 'docz'\nimport MyComponent from './my-components'\n\n<Props of={MyComponent} />\n")),i.a.createElement(l.MDXTag,{name:"h2",components:n,props:{id:"remove-hash-router-support"}},"Remove hash router support"),i.a.createElement(l.MDXTag,{name:"p",components:n},"In the newest version of Docz, because of some performance and bundle issues, now we are using ",i.a.createElement(l.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"@reach/router")," instead of ",i.a.createElement(l.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"react-router"),". So, how ",i.a.createElement(l.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"@reach/router")," doesn't have a official support for hash router yet and you have a lot of good free services to host your site instead of use Github pages - and get all benefits of browser history, of course - we decided to deprecated the hash router support."),i.a.createElement(l.MDXTag,{name:"h2",components:n,props:{id:"creating-and-using-docz-themes"}},"Creating and using Docz themes"),i.a.createElement(l.MDXTag,{name:"p",components:n},"The process to create themes for Docz it's very similar, there's not a big changes here, but you need to know about few changes that we made."),i.a.createElement(l.MDXTag,{name:"ul",components:n},i.a.createElement(l.MDXTag,{name:"li",components:n,parentName:"ul"},"The first one, is you don't have ",i.a.createElement(l.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"DocPreview")," anymore, instead of that, was introduced ",i.a.createElement(l.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"ComponentsProvider")," component."),i.a.createElement(l.MDXTag,{name:"li",components:n,parentName:"ul"},"The second one, is the ",i.a.createElement(l.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"render")," field passed in the components mapper now is ",i.a.createElement(l.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"playground"),"."),i.a.createElement(l.MDXTag,{name:"li",components:n,parentName:"ul"},"And the last one, is now you need to pass a children for your theme.")),i.a.createElement(l.MDXTag,{name:"h4",components:n,props:{id:"the-old-way-1"}},"The old way"),i.a.createElement(l.MDXTag,{name:"pre",components:n},i.a.createElement(l.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-jsx"}},"import React from 'react'\nimport { theme, DocPreview } from 'docz'\nimport * as components from './my-components'\n\nconst Theme = () => (\n  <DocPreview\n    components={{\n      page: components.Page,\n      notFound: components.NotFound,\n      render: components.Render,\n      props: components.Props,\n      h1: components.H1,\n      h2: components.H2,\n      h3: components.H3,\n      h4: components.H4,\n      h5: components.H5,\n      h6: components.H6,\n      ul: components.List,\n      loading: components.Loading,\n      table: components.Table,\n      pre: components.Pre,\n      inlineCode: components.Code,\n    }}\n  />\n)\n\nconst themeConfig = {\n  /* your theme config */\n}\nexport default theme(themeConfig)(Theme)\n")),i.a.createElement(l.MDXTag,{name:"h4",components:n,props:{id:"the-new-way-1"}},"The new way"),i.a.createElement(l.MDXTag,{name:"pre",components:n},i.a.createElement(l.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-jsx"}},"import React from 'react'\nimport { theme, ComponentsProvider } from 'docz'\nimport * as components from './my-components'\n\nconst map = {\n  page: components.Page,\n  notFound: components.NotFound,\n  playground: components.Playground,\n  h1: components.H1,\n  h2: components.H2,\n  h3: components.H3,\n  h4: components.H4,\n  h5: components.H5,\n  h6: components.H6,\n  ul: components.List,\n  loading: components.Loading,\n  table: components.Table,\n  pre: components.Pre,\n  inlineCode: components.Code,\n}\n\nconst Theme = ({ children }) => (\n  <ComponentsProvider components={map}>{children}</ComponentsProvider>\n)\n\nconst themeConfig = {\n  /* your theme config */\n}\nexport default theme(themeConfig)(Theme)\n")))}}]),n}(i.a.Component);"undefined"!==typeof d&&d&&d===Object(d)&&Object.defineProperty(d,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MDXContent",filename:"src/docs/documentation/references/migration-guide.mdx"}}),"undefined"!==typeof d&&d&&d===Object(d)&&Object.defineProperty(d,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MDXContent",filename:"src/docs/documentation/references/migration-guide.mdx"}}),d.isMDXComponent=!0}}]);
//# sourceMappingURL=src-docs-documentation-references-migration-guide.8919602c98d135083ee9.js.map