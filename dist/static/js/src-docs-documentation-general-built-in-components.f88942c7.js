(window.webpackJsonp=window.webpackJsonp||[]).push([[2],{"./src/docs/documentation/general/built-in-components.mdx":function(e,n,t){"use strict";t.r(n),t.d(n,"default",function(){return d});var o=t("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),a=t("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js"),r=t("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js"),s=t("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js"),m=t("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js"),p=t("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js"),c=t("./node_modules/react/index.js"),l=t.n(c),i=t("./node_modules/@mdx-js/tag/dist/index.js"),d=function(e){function n(e){var t;return Object(a.a)(this,n),(t=Object(s.a)(this,Object(m.a)(n).call(this,e))).layout=null,t}return Object(p.a)(n,e),Object(r.a)(n,[{key:"render",value:function(){var e=this.props,n=e.components;Object(o.a)(e,["components"]);return l.a.createElement(i.MDXTag,{name:"wrapper",components:n},l.a.createElement(i.MDXTag,{name:"h1",components:n,props:{id:"built-ins-components"}},"Built-ins components"),l.a.createElement(i.MDXTag,{name:"p",components:n},"Docz has built-in components that help you to document your things. Using the power of components and AST to parse and generate data for them, we can do so much, like render your components on the fly, create tables with contents, custom getters by traversing your file, etc. The sky is the limit here!"),l.a.createElement(i.MDXTag,{name:"h2",components:n,props:{id:"playground-component"}},"Playground Component"),l.a.createElement(i.MDXTag,{name:"p",components:n},"With the ",l.a.createElement(i.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"<Playground>")," component, you can render your component inside a playground and see the code used in Docz in a single view:"),l.a.createElement(i.MDXTag,{name:"pre",components:n},l.a.createElement(i.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-markdown"}},"---\nname: Button\n---\n\nimport { Playground } from 'docz'\nimport { Button } from './Button'\n\n# Button\n\n## Basic usage\n\n<Playground>\n  <Button>Click me</Button>\n  <Button kind=\"secondary\">Click me</Button>\n</Playground>\n")),l.a.createElement(i.MDXTag,{name:"p",components:n},l.a.createElement(i.MDXTag,{name:"img",components:n,parentName:"p",props:{src:"https://cdn-std.dprcdn.net/files/acc_649651/zqI01R",alt:null}})),l.a.createElement(i.MDXTag,{name:"p",components:n},"As you see, ",l.a.createElement(i.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"<Playground>")," rendered your component in a blank state, and right below, displayed the code used to render it. This can be very useful to test and develop your components in a good environment while you document it."),l.a.createElement(i.MDXTag,{name:"h2",components:n,props:{id:"component-props"}},"Component Props"),l.a.createElement(i.MDXTag,{name:"p",components:n},"Maybe the most important thing when you write a component is know which properties it has.\nHowever, keeping a good properties documentation of your component can be boring, because you need to write\nthe props specification and maintain the original props definition. And we know that to keep both in sync can be troublesome!"),l.a.createElement(i.MDXTag,{name:"p",components:n},"Docz offers a solution to this problem called the ",l.a.createElement(i.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"<Props>"),". It's a simple component that automatically gets the\nprops definition of your component and display them in a cool component.\nSimple like that and works nicely with Flow and Typescript."),l.a.createElement(i.MDXTag,{name:"pre",components:n},l.a.createElement(i.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-markdown"}},"---\nname: Button\n---\n\nimport { Playground, Props } from 'docz'\nimport { Button } from './'\n\n# Button\n\n<Props of={Button} />\n\n## Basic usage\n\n<Playground>\n  <Button>Click me</Button>\n  <Button kind=\"secondary\">Click me</Button>\n</Playground>\n")),l.a.createElement(i.MDXTag,{name:"p",components:n},"And now you have a table of properties:"),l.a.createElement(i.MDXTag,{name:"p",components:n},l.a.createElement(i.MDXTag,{name:"img",components:n,parentName:"p",props:{src:"https://cdn-std.dprcdn.net/files/acc_649651/M9DATx",alt:null}})),l.a.createElement(i.MDXTag,{name:"p",components:n},"You can see more about our built-in components on ",l.a.createElement(i.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"/docs/components-api"}},"Components API"),"."))}}]),n}(l.a.Component);"undefined"!==typeof d&&d&&d===Object(d)&&Object.defineProperty(d,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MDXContent",filename:"src/docs/documentation/general/built-in-components.mdx"}}),"undefined"!==typeof d&&d&&d===Object(d)&&Object.defineProperty(d,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MDXContent",filename:"src/docs/documentation/general/built-in-components.mdx"}}),d.isMDXComponent=!0}}]);
//# sourceMappingURL=src-docs-documentation-general-built-in-components.8919602c98d135083ee9.js.map